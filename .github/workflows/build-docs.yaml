name: Deploy Docs
on:
  push:
    branches:
      - develop
jobs:
  "build_docs":
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get reference hash
        id: vars
        run: |
          echo "::set-output name=commit_hash::$(git rev-parse --short HEAD)"
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14.x'
      - name: Install dependencies
        run: yarn --frozen-lockfile
      - name: Build Docs
        run: npm run docs:build
      - name: Inject CName into Build
        run: echo utils.projecterror.dev > ./docs/CNAME
      - name: Deploy gh-pages
        run: |
          git remote set-url origin https://git:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          npm run deploy -- -u "pe-actions-bot <actions@github.com>" -m "Deploy new docs - based on ${{ steps.vars.outputs.commit_hash }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CI: true
